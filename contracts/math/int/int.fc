{-
    math/int/int.fc

    This library provide functions for integer math. 
-}

int math::int::sqrt(int x) impure inline {
    throw_if(math::error::invalid_input, x < 0);

    if x <= 1 { return x; } 

    int xx = x;
    int r = 1;
    if xx >= 0x100000000000000000000000000000000 {
        xx >>= 128;
        r <<= 64;
    } 
    if xx >= 0x10000000000000000 {
        xx >>= 64;
        r <<= 32;
    } 
    if xx >= 0x100000000 {
        xx >>= 32;
        r <<= 16;
    } 
    if xx >= 0x10000 {
        xx >>= 16;
        r <<= 8;
    } 
    if xx >= 0x100 {
        xx >>= 8;
        r <<= 4;
    } 
    if xx >= 0x10 {
        xx >>= 4;
        r <<= 2;
    } 
    if xx >= 0x4 {
        r <<= 1 ;
    }

    r = (3 * r) >> 1;

    repeat(7) {
        r = (r + x / r) >> 1;
    }

    int r1 = x / r;

    return (r < r1 ? r : r1);
}

int math::int::pow(int _x, int _y) impure inline {
    if _y == 0 { return 1; }
    if _x == 0 { return 0; }
    if _x == 1 { return 1; }
    throw_unless(math::error::negative_power, _y > 0);

    int res = 1;
    while _y > 0 {
        if _y & 1 {
            res = res * _x;
        }
        _y = _y >> 1; 
        _x = _x * _x; 
    }

    return res;
}
